{"ast":null,"code":"// actions.js\nexport const FETCH_POKEMON_LIST_REQUEST = 'FETCH_POKEMON_LIST_REQUEST';\nexport const FETCH_POKEMON_LIST_SUCCESS = 'FETCH_POKEMON_LIST_SUCCESS';\nexport const FETCH_POKEMON_LIST_FAILURE = 'FETCH_POKEMON_LIST_FAILURE';\nexport const FETCH_POKEMON_REQUEST = 'FETCH_POKEMON_REQUEST';\nexport const FETCH_POKEMON_SUCCESS = 'FETCH_POKEMON_SUCCESS';\nexport const FETCH_POKEMON_FAILURE = 'FETCH_POKEMON_FAILURE';\nconst updatePokemonList = list => {\n  return {\n    type: FETCH_POKEMON_LIST_SUCCESS,\n    payload: list\n  };\n};\nasync function getAllDataForPokemonList(list) {\n  let completed_list = [];\n  for (let e of list) {\n    let pokemonData = await fetch('https://pokeapi.co/api/v2/pokemon/' + e.url);\n    completed_list.add(pokemonData.json());\n  }\n  return completed_list;\n}\nexport const fetchPokemonList = () => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_POKEMON_LIST_REQUEST\n    });\n    try {\n      const res = await fetch('https://pokeapi.co/api/v2/pokemon/');\n      if (!res.ok) {\n        throw new Error('Errore nella richiesta');\n      }\n      const list = await res.json();\n      const completed_list = await getAllDataForPokemonList(list.results || []);\n      dispatch(updatePokemonList());\n    } catch (error) {\n      dispatch({\n        type: FETCH_POKEMON_LIST_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};\nconst setPokemonInfo = data => {\n  return {\n    type: FETCH_POKEMON_SUCCESS,\n    payload: data\n  };\n};\nexport const fetchPokemon = url => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_POKEMON_REQUEST\n    });\n    try {\n      const res = await fetch('https://pokeapi.co/api/v2/pokemon/' + url);\n      console.log(res);\n      if (!res.ok) {\n        throw new Error('Errore nella richiesta');\n      }\n      const data = await res.json();\n      dispatch(setPokemonInfo(data));\n    } catch (error) {\n      dispatch({\n        type: FETCH_POKEMON_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["FETCH_POKEMON_LIST_REQUEST","FETCH_POKEMON_LIST_SUCCESS","FETCH_POKEMON_LIST_FAILURE","FETCH_POKEMON_REQUEST","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_FAILURE","updatePokemonList","list","type","payload","getAllDataForPokemonList","completed_list","e","pokemonData","fetch","url","add","json","fetchPokemonList","dispatch","res","ok","Error","results","error","message","setPokemonInfo","data","fetchPokemon","console","log"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/PokeApp/poke-app/src/store/actions/pokemon.js"],"sourcesContent":["// actions.js\nexport const FETCH_POKEMON_LIST_REQUEST = 'FETCH_POKEMON_LIST_REQUEST';\nexport const FETCH_POKEMON_LIST_SUCCESS = 'FETCH_POKEMON_LIST_SUCCESS';\nexport const FETCH_POKEMON_LIST_FAILURE = 'FETCH_POKEMON_LIST_FAILURE';\n\nexport const FETCH_POKEMON_REQUEST = 'FETCH_POKEMON_REQUEST';\nexport const FETCH_POKEMON_SUCCESS = 'FETCH_POKEMON_SUCCESS';\nexport const FETCH_POKEMON_FAILURE = 'FETCH_POKEMON_FAILURE';\n\n\nconst updatePokemonList = (list) => {\n    return {\n        type: FETCH_POKEMON_LIST_SUCCESS,\n        payload: list\n    }\n}\n\nasync function getAllDataForPokemonList(list) {\n    let completed_list = [];\n    for(let e of list) {\n        let pokemonData = await fetch('https://pokeapi.co/api/v2/pokemon/'+e.url);\n        completed_list.add(pokemonData.json());\n    }\n\n    return completed_list;\n}\n\nexport const fetchPokemonList = () => {\n    return async dispatch => {\n        dispatch({ type: FETCH_POKEMON_LIST_REQUEST });\n        try {\n            const res = await fetch('https://pokeapi.co/api/v2/pokemon/');\n            if (!res.ok) {\n                throw new Error('Errore nella richiesta');\n            }    \n            const list = await res.json();\n            const completed_list = await getAllDataForPokemonList(list.results || [])\n            dispatch(updatePokemonList());\n        }     \n        catch (error) {\n            dispatch({ type: FETCH_POKEMON_LIST_FAILURE, payload: error.message });\n        }    \n    }    \n};    \n\n\nconst setPokemonInfo = (data) => {\n    return {\n        type: FETCH_POKEMON_SUCCESS,\n        payload: data\n    }\n}\n\nexport const fetchPokemon = (url) => {\n    return async dispatch => {\n        dispatch({ type: FETCH_POKEMON_REQUEST });\n        try {\n            const res = await fetch('https://pokeapi.co/api/v2/pokemon/'+url);\n            console.log(res);\n            if (!res.ok) {\n                throw new Error('Errore nella richiesta');\n            }\n            const data = await res.json();\n            dispatch(setPokemonInfo(data));\n        } \n        catch (error) {\n            dispatch({ type: FETCH_POKEMON_FAILURE, payload: error.message });\n        }\n    }\n};\n\n\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AACtE,OAAO,MAAMC,0BAA0B,GAAG,4BAA4B;AAEtE,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAC5D,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAG5D,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;EAChC,OAAO;IACHC,IAAI,EAAEP,0BAA0B;IAChCQ,OAAO,EAAEF;EACb,CAAC;AACL,CAAC;AAED,eAAeG,wBAAwBA,CAACH,IAAI,EAAE;EAC1C,IAAII,cAAc,GAAG,EAAE;EACvB,KAAI,IAAIC,CAAC,IAAIL,IAAI,EAAE;IACf,IAAIM,WAAW,GAAG,MAAMC,KAAK,CAAC,oCAAoC,GAACF,CAAC,CAACG,GAAG,CAAC;IACzEJ,cAAc,CAACK,GAAG,CAACH,WAAW,CAACI,IAAI,CAAC,CAAC,CAAC;EAC1C;EAEA,OAAON,cAAc;AACzB;AAEA,OAAO,MAAMO,gBAAgB,GAAGA,CAAA,KAAM;EAClC,OAAO,MAAMC,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAAEX,IAAI,EAAER;IAA2B,CAAC,CAAC;IAC9C,IAAI;MACA,MAAMoB,GAAG,GAAG,MAAMN,KAAK,CAAC,oCAAoC,CAAC;MAC7D,IAAI,CAACM,GAAG,CAACC,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMf,IAAI,GAAG,MAAMa,GAAG,CAACH,IAAI,CAAC,CAAC;MAC7B,MAAMN,cAAc,GAAG,MAAMD,wBAAwB,CAACH,IAAI,CAACgB,OAAO,IAAI,EAAE,CAAC;MACzEJ,QAAQ,CAACb,iBAAiB,CAAC,CAAC,CAAC;IACjC,CAAC,CACD,OAAOkB,KAAK,EAAE;MACVL,QAAQ,CAAC;QAAEX,IAAI,EAAEN,0BAA0B;QAAEO,OAAO,EAAEe,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC1E;EACJ,CAAC;AACL,CAAC;AAGD,MAAMC,cAAc,GAAIC,IAAI,IAAK;EAC7B,OAAO;IACHnB,IAAI,EAAEJ,qBAAqB;IAC3BK,OAAO,EAAEkB;EACb,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,YAAY,GAAIb,GAAG,IAAK;EACjC,OAAO,MAAMI,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAAEX,IAAI,EAAEL;IAAsB,CAAC,CAAC;IACzC,IAAI;MACA,MAAMiB,GAAG,GAAG,MAAMN,KAAK,CAAC,oCAAoC,GAACC,GAAG,CAAC;MACjEc,OAAO,CAACC,GAAG,CAACV,GAAG,CAAC;MAChB,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC7C;MACA,MAAMK,IAAI,GAAG,MAAMP,GAAG,CAACH,IAAI,CAAC,CAAC;MAC7BE,QAAQ,CAACO,cAAc,CAACC,IAAI,CAAC,CAAC;IAClC,CAAC,CACD,OAAOH,KAAK,EAAE;MACVL,QAAQ,CAAC;QAAEX,IAAI,EAAEH,qBAAqB;QAAEI,OAAO,EAAEe,KAAK,CAACC;MAAQ,CAAC,CAAC;IACrE;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}