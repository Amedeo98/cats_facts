{"ast":null,"code":"var _jsxFileName = \"/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CatLoad from './cat_load';\nimport { fetchCatFactsList } from '../store/actions/cat_fact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact({\n  selectedCatFact,\n  facts,\n  fetchCatFactsList,\n  loading,\n  error\n}) {\n  _s();\n  const {\n    index\n  } = useParams();\n  useEffect(() => {\n    const catFactIndex = parseInt(index, 10);\n\n    // Verifica se il cat_fact è già presente nella lista\n    if (!facts || !facts.list || facts.list.length === 0 || !facts.list[catFactIndex]) {\n      fetchCatFactsList();\n    } else {\n      // Assegna il cat_fact selezionato\n      selectedCatFact = facts.list[catFactIndex];\n    }\n  }, [index, fetchCatFactsList, facts, selectedCatFact]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CatLoad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedCatFact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Cat Fact #\", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedCatFact.img,\n        alt: \"Cat Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: selectedCatFact.fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CatLoad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_s(CatFact, \"01l2+2DbAT1lbk0hgnoTLNWyCAU=\", false, function () {\n  return [useParams];\n});\n_c = CatFact;\nconst mapStateToProps = state => {\n  return {\n    facts: state.cat_fact.facts,\n    selectedCatFact: state.cat_fact.selectedCatFact,\n    // Aggiunto per accedere direttamente al cat_fact selezionato\n    loading: state.cat_fact.loading,\n    error: state.cat_fact.error\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchCatFactsList\n})(CatFact);\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useEffect","connect","useParams","CatLoad","fetchCatFactsList","jsxDEV","_jsxDEV","CatFact","selectedCatFact","facts","loading","error","_s","index","catFactIndex","parseInt","list","length","children","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","className","fact","_c","mapStateToProps","state","cat_fact","$RefreshReg$"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CatLoad from './cat_load';\nimport { fetchCatFactsList } from '../store/actions/cat_fact';\n\nfunction CatFact({ selectedCatFact, facts, fetchCatFactsList, loading, error }) {\n    const { index } = useParams();\n\n    useEffect(() => {\n        const catFactIndex = parseInt(index, 10);\n\n        // Verifica se il cat_fact è già presente nella lista\n        if (!facts || !facts.list || facts.list.length === 0 || !facts.list[catFactIndex]) {\n            fetchCatFactsList();\n        }\n        else {\n            // Assegna il cat_fact selezionato\n            selectedCatFact = facts.list[catFactIndex];\n        }\n    }, [index, fetchCatFactsList, facts, selectedCatFact]);\n\n    if (loading) {\n        return <div><CatLoad /></div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            {selectedCatFact ? (\n                <div>\n                    <h2>Cat Fact #{index}</h2>\n                    <img src={selectedCatFact.img} alt=\"Cat Image\" />\n                    <div className=\"preview\">{selectedCatFact.fact}</div>\n                </div>\n            ) : (\n                <div><CatLoad /></div>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        facts: state.cat_fact.facts,\n        selectedCatFact: state.cat_fact.selectedCatFact, // Aggiunto per accedere direttamente al cat_fact selezionato\n        loading: state.cat_fact.loading,\n        error: state.cat_fact.error,\n    };\n};\n\nexport default connect(mapStateToProps, { fetchCatFactsList })(CatFact);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}