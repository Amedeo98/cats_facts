{"ast":null,"code":"var _jsxFileName = \"/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact({\n  selectedCatFact,\n  facts,\n  fetchCatFactsList\n}) {\n  _s();\n  const {\n    index\n  } = useParams();\n  useEffect(() => {\n    if (!facts || !facts.list || facts.list.length === 0 || !loading) {\n      fetchCatFactsList();\n    }\n    const catFactIndex = parseInt(index, 10);\n    const selectedCatFact = facts[catFactIndex];\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedCatFact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Cat Fact #\", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedCatFact.img,\n        alt: \"Cat Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: selectedCatFact.fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Caricamento...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(CatFact, \"01l2+2DbAT1lbk0hgnoTLNWyCAU=\", false, function () {\n  return [useParams];\n});\n_c = CatFact;\nconst mapStateToProps = state => {\n  return {\n    facts: state.cat_fact.facts\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchCatFactsList\n})(CatFact);\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useEffect","connect","useParams","jsxDEV","_jsxDEV","CatFact","selectedCatFact","facts","fetchCatFactsList","_s","index","list","length","loading","catFactIndex","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","className","fact","_c","mapStateToProps","state","cat_fact","$RefreshReg$"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\n\nfunction CatFact({selectedCatFact, facts, fetchCatFactsList }) {\n  const { index } = useParams();\n\n  useEffect(() => {\n    if (!facts || !facts.list || facts.list.length === 0 || !loading) {\n        fetchCatFactsList();\n    }\n    const catFactIndex = parseInt(index, 10);\n    const selectedCatFact = facts[catFactIndex]\n  }, [index, ]);\n\n  return (\n    <div>\n      {selectedCatFact ? (\n        <div>\n          <h2>Cat Fact #{index}</h2>\n          <img src={selectedCatFact.img} alt=\"Cat Image\" />\n          <div className=\"preview\">{selectedCatFact.fact}</div>\n        </div>\n      ) : (\n        <p>Caricamento...</p>\n      )}\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    facts: state.cat_fact.facts,\n  };\n};\n\nexport default connect(mapStateToProps, { fetchCatFactsList })(CatFact);\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,OAAOA,CAAC;EAACC,eAAe;EAAEC,KAAK;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAC7D,MAAM;IAAEC;EAAM,CAAC,GAAGR,SAAS,CAAC,CAAC;EAE7BF,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,KAAK,IAAI,CAACA,KAAK,CAACI,IAAI,IAAIJ,KAAK,CAACI,IAAI,CAACC,MAAM,KAAK,CAAC,IAAI,CAACC,OAAO,EAAE;MAC9DL,iBAAiB,CAAC,CAAC;IACvB;IACA,MAAMM,YAAY,GAAGC,QAAQ,CAACL,KAAK,EAAE,EAAE,CAAC;IACxC,MAAMJ,eAAe,GAAGC,KAAK,CAACO,YAAY,CAAC;EAC7C,CAAC,EAAE,CAACJ,KAAK,CAAG,CAAC;EAEb,oBACEN,OAAA;IAAAY,QAAA,EACGV,eAAe,gBACdF,OAAA;MAAAY,QAAA,gBACEZ,OAAA;QAAAY,QAAA,GAAI,YAAU,EAACN,KAAK;MAAA;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1BhB,OAAA;QAAKiB,GAAG,EAAEf,eAAe,CAACgB,GAAI;QAACC,GAAG,EAAC;MAAW;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDhB,OAAA;QAAKoB,SAAS,EAAC,SAAS;QAAAR,QAAA,EAAEV,eAAe,CAACmB;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,gBAENhB,OAAA;MAAAY,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACrB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACX,EAAA,CAxBQJ,OAAO;EAAA,QACIH,SAAS;AAAA;AAAAwB,EAAA,GADpBrB,OAAO;AA0BhB,MAAMsB,eAAe,GAAIC,KAAK,IAAK;EACjC,OAAO;IACLrB,KAAK,EAAEqB,KAAK,CAACC,QAAQ,CAACtB;EACxB,CAAC;AACH,CAAC;AAED,eAAeN,OAAO,CAAC0B,eAAe,EAAE;EAAEnB;AAAkB,CAAC,CAAC,CAACH,OAAO,CAAC;AAAC,IAAAqB,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}