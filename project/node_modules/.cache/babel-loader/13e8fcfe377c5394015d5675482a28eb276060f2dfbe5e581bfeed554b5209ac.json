{"ast":null,"code":"var _jsxFileName = \"/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CatLoad from './cat_load';\nimport { fetchCatFactsList } from '../store/actions/cat_fact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CatFact({\n  selectedCatFact,\n  facts,\n  fetchCatFactsList,\n  loading,\n  error\n}) {\n  _s();\n  const {\n    index\n  } = useParams();\n  const [localSelectedCatFact, setLocalSelectedCatFact] = useState(null);\n  useEffect(() => {\n    const catFactIndex = parseInt(index, 10);\n\n    // Verifica se il cat_fact è già presente nella lista\n    if (!facts || !facts.list || facts.list.length === 0 || !facts.list[catFactIndex]) {\n      fetchCatFactsList();\n    } else {\n      // Assegna il cat_fact selezionato\n      setLocalSelectedCatFact(facts.list[catFactIndex]);\n    }\n  }, [index, fetchCatFactsList, facts]);\n\n  // Aggiorna selectedCatFact quando lo stato locale cambia\n  useEffect(() => {\n    if (localSelectedCatFact) {\n      selectedCatFact = localSelectedCatFact;\n    }\n  }, [localSelectedCatFact]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CatLoad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: localSelectedCatFact ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Cat Fact #\", index]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: localSelectedCatFact.img,\n        alt: \"Cat Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"preview\",\n        children: localSelectedCatFact.fact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CatLoad, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 22\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(CatFact, \"Xj9PlpsCNYqSpKierhcz/b66Fk0=\", false, function () {\n  return [useParams];\n});\n_c = CatFact;\nconst mapStateToProps = state => {\n  return {\n    facts: state.cat_fact.facts,\n    selectedCatFact: state.cat_fact.selectedCatFact,\n    // Aggiunto per accedere direttamente al cat_fact selezionato\n    loading: state.cat_fact.loading,\n    error: state.cat_fact.error\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchCatFactsList\n})(CatFact);\nvar _c;\n$RefreshReg$(_c, \"CatFact\");","map":{"version":3,"names":["React","useEffect","useState","connect","useParams","CatLoad","fetchCatFactsList","jsxDEV","_jsxDEV","CatFact","selectedCatFact","facts","loading","error","_s","index","localSelectedCatFact","setLocalSelectedCatFact","catFactIndex","parseInt","list","length","children","fileName","_jsxFileName","lineNumber","columnNumber","src","img","alt","className","fact","_c","mapStateToProps","state","cat_fact","$RefreshReg$"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/components/cat_fact.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport CatLoad from './cat_load';\nimport { fetchCatFactsList } from '../store/actions/cat_fact';\n\nfunction CatFact({ selectedCatFact, facts, fetchCatFactsList, loading, error }) {\n    const { index } = useParams();\n    const [localSelectedCatFact, setLocalSelectedCatFact] = useState(null);\n\n    useEffect(() => {\n        const catFactIndex = parseInt(index, 10);\n\n        // Verifica se il cat_fact è già presente nella lista\n        if (!facts || !facts.list || facts.list.length === 0 || !facts.list[catFactIndex]) {\n            fetchCatFactsList();\n        } else {\n            // Assegna il cat_fact selezionato\n            setLocalSelectedCatFact(facts.list[catFactIndex]);\n        }\n    }, [index, fetchCatFactsList, facts]);\n\n    // Aggiorna selectedCatFact quando lo stato locale cambia\n    useEffect(() => {\n        if (localSelectedCatFact) {\n            selectedCatFact = localSelectedCatFact;\n        }\n    }, [localSelectedCatFact]);\n\n    if (loading) {\n        return <div><CatLoad /></div>;\n    }\n\n    if (error) {\n        return <div>Error: {error}</div>;\n    }\n\n    return (\n        <div>\n            {localSelectedCatFact ? (\n                <div>\n                    <h2>Cat Fact #{index}</h2>\n                    <img src={localSelectedCatFact.img} alt=\"Cat Image\" />\n                    <div className=\"preview\">{localSelectedCatFact.fact}</div>\n                </div>\n            ) : (\n                <div><CatLoad /></div>\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        facts: state.cat_fact.facts,\n        selectedCatFact: state.cat_fact.selectedCatFact, // Aggiunto per accedere direttamente al cat_fact selezionato\n        loading: state.cat_fact.loading,\n        error: state.cat_fact.error,\n    };\n};\n\nexport default connect(mapStateToProps, { fetchCatFactsList })(CatFact);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}