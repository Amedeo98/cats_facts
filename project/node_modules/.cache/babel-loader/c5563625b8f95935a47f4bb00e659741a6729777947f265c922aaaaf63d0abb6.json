{"ast":null,"code":"// reducers.js\nimport { FETCH_POKEMON_LIST_REQUEST, FETCH_POKEMON_LIST_SUCCESS, FETCH_POKEMON_LIST_FAILURE, FETCH_EVOL_REQUEST, FETCH_EVOL_SUCCESS, FETCH_EVOL_FAILURE } from '../actions/pokemon';\nconst initialState = {\n  list: [],\n  loading: false,\n  error: null,\n  evolution_chain: []\n};\n\n//built the request, success, failure structure but still not used for the evolution\n\nconst pokemonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POKEMON_LIST_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_POKEMON_LIST_SUCCESS:\n      return {\n        ...state,\n        list: action.payload,\n        loading: false\n      };\n    case FETCH_POKEMON_LIST_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    case FETCH_EVOL_REQUEST:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case FETCH_EVOL_SUCCESS:\n      return {\n        ...state,\n        evolution_chain: action.payload,\n        loading: false\n      };\n    case FETCH_EVOL_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      };\n    default:\n      return state;\n  }\n};\nexport default pokemonReducer;","map":{"version":3,"names":["FETCH_POKEMON_LIST_REQUEST","FETCH_POKEMON_LIST_SUCCESS","FETCH_POKEMON_LIST_FAILURE","FETCH_EVOL_REQUEST","FETCH_EVOL_SUCCESS","FETCH_EVOL_FAILURE","initialState","list","loading","error","evolution_chain","pokemonReducer","state","action","type","payload"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/DistroCat/distro-cat/src/store/reducers/pokemon.js"],"sourcesContent":["// reducers.js\nimport {\n  FETCH_POKEMON_LIST_REQUEST, FETCH_POKEMON_LIST_SUCCESS, FETCH_POKEMON_LIST_FAILURE,\n  FETCH_EVOL_REQUEST, FETCH_EVOL_SUCCESS, FETCH_EVOL_FAILURE,\n} from '../actions/pokemon';\n\nconst initialState = {\n  list: [],\n  loading: false,\n  error: null,\n  evolution_chain: [],\n};\n\n//built the request, success, failure structure but still not used for the evolution\n\nconst pokemonReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_POKEMON_LIST_REQUEST:\n      return { ...state, loading: true, error: null };\n    case FETCH_POKEMON_LIST_SUCCESS:\n      return { ...state, list: action.payload, loading: false };\n    case FETCH_POKEMON_LIST_FAILURE:\n      return { ...state, error: action.payload, loading: false };\n    case FETCH_EVOL_REQUEST:\n      return { ...state, loading: true, error: null };\n    case FETCH_EVOL_SUCCESS:\n      return { ...state, evolution_chain: action.payload, loading: false };\n    case FETCH_EVOL_FAILURE:\n      return { ...state, error: action.payload, loading: false };\n    default:\n      return state;\n  }\n};\n\nexport default pokemonReducer;\n"],"mappings":"AAAA;AACA,SACEA,0BAA0B,EAAEC,0BAA0B,EAAEC,0BAA0B,EAClFC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,QACrD,oBAAoB;AAE3B,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,EAAE;EACRC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE,IAAI;EACXC,eAAe,EAAE;AACnB,CAAC;;AAED;;AAEA,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EACvD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKd,0BAA0B;MAC7B,OAAO;QAAE,GAAGY,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAKR,0BAA0B;MAC7B,OAAO;QAAE,GAAGW,KAAK;QAAEL,IAAI,EAAEM,MAAM,CAACE,OAAO;QAAEP,OAAO,EAAE;MAAM,CAAC;IAC3D,KAAKN,0BAA0B;MAC7B,OAAO;QAAE,GAAGU,KAAK;QAAEH,KAAK,EAAEI,MAAM,CAACE,OAAO;QAAEP,OAAO,EAAE;MAAM,CAAC;IAC5D,KAAKL,kBAAkB;MACrB,OAAO;QAAE,GAAGS,KAAK;QAAEJ,OAAO,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC;IACjD,KAAKL,kBAAkB;MACrB,OAAO;QAAE,GAAGQ,KAAK;QAAEF,eAAe,EAAEG,MAAM,CAACE,OAAO;QAAEP,OAAO,EAAE;MAAM,CAAC;IACtE,KAAKH,kBAAkB;MACrB,OAAO;QAAE,GAAGO,KAAK;QAAEH,KAAK,EAAEI,MAAM,CAACE,OAAO;QAAEP,OAAO,EAAE;MAAM,CAAC;IAC5D;MACE,OAAOI,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}