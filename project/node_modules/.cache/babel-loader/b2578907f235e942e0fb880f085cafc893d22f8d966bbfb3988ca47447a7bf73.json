{"ast":null,"code":"export const FETCH_CAT_FACT_LIST_REQUEST = 'FETCH_CAT_FACT_LIST_REQUEST';\nexport const FETCH_CAT_FACT_LIST_SUCCESS = 'FETCH_CAT_FACT_LIST_SUCCESS';\nexport const FETCH_CAT_FACT_LIST_FAILURE = 'FETCH_CAT_FACT_LIST_FAILURE';\nconst updatePokemonList = list => {\n  return {\n    type: FETCH_CAT_FACT_LIST_SUCCESS,\n    payload: list\n  };\n};\nexport const fetchCatFactsList = () => {\n  return async dispatch => {\n    dispatch({\n      type: FETCH_CAT_FACT_LIST_REQUEST\n    });\n    try {\n      const res = await fetch('https://catfact.ninja/facts?limit=20');\n      if (!res.ok) {\n        throw new Error('Error in request');\n      }\n      const list = await res.json();\n      //dispatch(updatePokemonList(list));\n    } catch (error) {\n      dispatch({\n        type: FETCH_CAT_FACT_LIST_FAILURE,\n        payload: error.message\n      });\n    }\n  };\n};","map":{"version":3,"names":["FETCH_CAT_FACT_LIST_REQUEST","FETCH_CAT_FACT_LIST_SUCCESS","FETCH_CAT_FACT_LIST_FAILURE","updatePokemonList","list","type","payload","fetchCatFactsList","dispatch","res","fetch","ok","Error","json","error","message"],"sources":["/Users/amedeofresia/Documents/Lavoro/React Test/CatsFacts/cats-facts/src/store/actions/cat_fact.js"],"sourcesContent":["export const FETCH_CAT_FACT_LIST_REQUEST = 'FETCH_CAT_FACT_LIST_REQUEST';\nexport const FETCH_CAT_FACT_LIST_SUCCESS = 'FETCH_CAT_FACT_LIST_SUCCESS';\nexport const FETCH_CAT_FACT_LIST_FAILURE = 'FETCH_CAT_FACT_LIST_FAILURE';\n\nconst updatePokemonList = (list) => {\n    return {\n        type: FETCH_CAT_FACT_LIST_SUCCESS,\n        payload: list\n    }\n}\n\n\nexport const fetchCatFactsList = () => {\n    return async dispatch => {\n        dispatch({ type: FETCH_CAT_FACT_LIST_REQUEST });\n        try {\n            const res = await fetch('https://catfact.ninja/facts?limit=20');\n            if (!res.ok) {\n                throw new Error('Error in request');\n            }\n            const list = await res.json();\n            //dispatch(updatePokemonList(list));\n        }\n        catch (error) {\n            dispatch({ type: FETCH_CAT_FACT_LIST_FAILURE, payload: error.message });\n        }\n    }\n};\n\n"],"mappings":"AAAA,OAAO,MAAMA,2BAA2B,GAAG,6BAA6B;AACxE,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AACxE,OAAO,MAAMC,2BAA2B,GAAG,6BAA6B;AAExE,MAAMC,iBAAiB,GAAIC,IAAI,IAAK;EAChC,OAAO;IACHC,IAAI,EAAEJ,2BAA2B;IACjCK,OAAO,EAAEF;EACb,CAAC;AACL,CAAC;AAGD,OAAO,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;EACnC,OAAO,MAAMC,QAAQ,IAAI;IACrBA,QAAQ,CAAC;MAAEH,IAAI,EAAEL;IAA4B,CAAC,CAAC;IAC/C,IAAI;MACA,MAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsC,CAAC;MAC/D,IAAI,CAACD,GAAG,CAACE,EAAE,EAAE;QACT,MAAM,IAAIC,KAAK,CAAC,kBAAkB,CAAC;MACvC;MACA,MAAMR,IAAI,GAAG,MAAMK,GAAG,CAACI,IAAI,CAAC,CAAC;MAC7B;IACJ,CAAC,CACD,OAAOC,KAAK,EAAE;MACVN,QAAQ,CAAC;QAAEH,IAAI,EAAEH,2BAA2B;QAAEI,OAAO,EAAEQ,KAAK,CAACC;MAAQ,CAAC,CAAC;IAC3E;EACJ,CAAC;AACL,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}